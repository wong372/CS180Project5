Project 5 Outline: 

Abstract: Project 4, with GUI, concurrency and network IO added. 

Details: 
- All interactions must take place over GUI (complex and JOPtionpane). 
- All file operations (data writing and reading) must take place on the server. 
- Multiple users (instances of client) must be able to connect at once. 
- New content or changes made by one user must be visible after refresh by other users. 

Problems: 
- Might be too complicated down the road to simply separate the classes; might require a rewrite to fully implement new features. 
- 

TODO:

- create a refresh button // maybe include "volatile keyword"
  - "If a variable is declared with the volatile keyword then it is guaranteed that any thread that reads the field will see the most recently written value. The volatile keyword will not perform any mutual exclusive lock on the variable."
    - https://www.vogella.com/tutorials/JavaConcurrency/article.html (Section 3.3)

DONE? (move from TODO instead of deleting)
- create a log out button (make sure program doesn't end // i think that would kick all concurrent users out of the program as well)
- implement concurrency
- synchronize access to quizzes to one teacher at a time // each quiz should only be graded by one teacher one time
- polish code (update javadocs, comment, coding style check, remove commented code)


Optional:
- change from dropdown menu to selecting an answer choice in a quiz using jRadioButton (in Swing toolkit)
